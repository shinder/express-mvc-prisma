// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  // 資料表欄位為 first_name
  firstName  String   @map("first_name")
  lastName   String   @map("last-name")
  email      String   @unique
  createdAt  DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt
  // 一個用戶可以有多則貼文，關聯到 `Post` 模型的陣列
  posts      Post[]
  // 一個人有很多嗜好
  hobbies    Hobby[]
  // 一個用戶 "可能有" 設定 "個人資料"
  profile    Profile?

  // 明確註釋為什麼要忽略
  password      String @default("") @ignore // 安全考量：防止意外暴露
  internalNotes String @default("") @ignore // 僅供管理員後台使用

  // 對應的資料表為 users
  @@map("users")
}

model Post {
  id        Int    @id @default(autoincrement())
  content   String @db.Text
  author_id Int
  // 一則貼文有所屬性用戶
  author    User   @relation(fields: [author_id], references: [id])
}

model Hobby {
  id    Int    @id @default(autoincrement())
  name  String
  // 有相同嗜好的有許多人
  users User[]
}

model Profile {
  id      Int  @id
  // 個人資料可以對應到某個用戶
  user    User @relation(fields: [user_id], references: [id])
  user_id Int  @unique
}

model Member {
  member_id     Int               @id @default(autoincrement())
  email         String            @unique(map: "email") @db.VarChar(100)
  password_hash String            @db.VarChar(100)
  mobile        String?           @db.VarChar(30)
  nickname      String            @db.VarChar(30)
  create_at     DateTime          @db.DateTime(0)
  favorites     ContactFavorite[]

  @@map("members")
}

model Contact {
  ab_id      Int               @id @default(autoincrement())
  name       String            @db.VarChar(255)
  email      String            @db.VarChar(255)
  mobile     String            @db.VarChar(255)
  birthday   DateTime?         @db.Date
  address    String            @db.VarChar(255)
  created_at DateTime          @default(now()) @db.DateTime(0)
  favorites  ContactFavorite[]

  @@map("address_book")
}

model ContactFavorite {
  like_id    Int      @id @default(autoincrement())
  member_id  Int
  ab_id      Int
  created_at DateTime @default(now()) @db.DateTime(0)
  member     Member   @relation(fields: [member_id], references: [member_id], onDelete: Cascade, map: "ab_likes_ibfk_1")
  contact    Contact  @relation(fields: [ab_id], references: [ab_id], onDelete: Cascade, map: "ab_likes_ibfk_2")

  @@unique([member_id, ab_id], map: "member_id_2")
  @@index([ab_id], map: "ab_id")
  @@index([member_id], map: "member_id")
  @@map("ab_likes")
}
